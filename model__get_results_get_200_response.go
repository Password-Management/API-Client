/*
Customer Creation API

API's cerate customer in the database

API version: 1.0.0
Contact: sharmavivek1709@gmail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetResultsGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetResultsGet200Response{}

// GetResultsGet200Response struct for GetResultsGet200Response
type GetResultsGet200Response struct {
	Emai *string `json:"emai,omitempty"`
	Name *string `json:"name,omitempty"`
	Plan *string `json:"plan,omitempty"`
	Algorithm *string `json:"algorithm,omitempty"`
	Platform *string `json:"platform,omitempty"`
	MasterId *string `json:"master_id,omitempty"`
}

// NewGetResultsGet200Response instantiates a new GetResultsGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetResultsGet200Response() *GetResultsGet200Response {
	this := GetResultsGet200Response{}
	return &this
}

// NewGetResultsGet200ResponseWithDefaults instantiates a new GetResultsGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetResultsGet200ResponseWithDefaults() *GetResultsGet200Response {
	this := GetResultsGet200Response{}
	return &this
}

// GetEmai returns the Emai field value if set, zero value otherwise.
func (o *GetResultsGet200Response) GetEmai() string {
	if o == nil || IsNil(o.Emai) {
		var ret string
		return ret
	}
	return *o.Emai
}

// GetEmaiOk returns a tuple with the Emai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResultsGet200Response) GetEmaiOk() (*string, bool) {
	if o == nil || IsNil(o.Emai) {
		return nil, false
	}
	return o.Emai, true
}

// HasEmai returns a boolean if a field has been set.
func (o *GetResultsGet200Response) HasEmai() bool {
	if o != nil && !IsNil(o.Emai) {
		return true
	}

	return false
}

// SetEmai gets a reference to the given string and assigns it to the Emai field.
func (o *GetResultsGet200Response) SetEmai(v string) {
	o.Emai = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetResultsGet200Response) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResultsGet200Response) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetResultsGet200Response) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetResultsGet200Response) SetName(v string) {
	o.Name = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *GetResultsGet200Response) GetPlan() string {
	if o == nil || IsNil(o.Plan) {
		var ret string
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResultsGet200Response) GetPlanOk() (*string, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *GetResultsGet200Response) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given string and assigns it to the Plan field.
func (o *GetResultsGet200Response) SetPlan(v string) {
	o.Plan = &v
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *GetResultsGet200Response) GetAlgorithm() string {
	if o == nil || IsNil(o.Algorithm) {
		var ret string
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResultsGet200Response) GetAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.Algorithm) {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *GetResultsGet200Response) HasAlgorithm() bool {
	if o != nil && !IsNil(o.Algorithm) {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *GetResultsGet200Response) SetAlgorithm(v string) {
	o.Algorithm = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *GetResultsGet200Response) GetPlatform() string {
	if o == nil || IsNil(o.Platform) {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResultsGet200Response) GetPlatformOk() (*string, bool) {
	if o == nil || IsNil(o.Platform) {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *GetResultsGet200Response) HasPlatform() bool {
	if o != nil && !IsNil(o.Platform) {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *GetResultsGet200Response) SetPlatform(v string) {
	o.Platform = &v
}

// GetMasterId returns the MasterId field value if set, zero value otherwise.
func (o *GetResultsGet200Response) GetMasterId() string {
	if o == nil || IsNil(o.MasterId) {
		var ret string
		return ret
	}
	return *o.MasterId
}

// GetMasterIdOk returns a tuple with the MasterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetResultsGet200Response) GetMasterIdOk() (*string, bool) {
	if o == nil || IsNil(o.MasterId) {
		return nil, false
	}
	return o.MasterId, true
}

// HasMasterId returns a boolean if a field has been set.
func (o *GetResultsGet200Response) HasMasterId() bool {
	if o != nil && !IsNil(o.MasterId) {
		return true
	}

	return false
}

// SetMasterId gets a reference to the given string and assigns it to the MasterId field.
func (o *GetResultsGet200Response) SetMasterId(v string) {
	o.MasterId = &v
}

func (o GetResultsGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetResultsGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Emai) {
		toSerialize["emai"] = o.Emai
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.Algorithm) {
		toSerialize["algorithm"] = o.Algorithm
	}
	if !IsNil(o.Platform) {
		toSerialize["platform"] = o.Platform
	}
	if !IsNil(o.MasterId) {
		toSerialize["master_id"] = o.MasterId
	}
	return toSerialize, nil
}

type NullableGetResultsGet200Response struct {
	value *GetResultsGet200Response
	isSet bool
}

func (v NullableGetResultsGet200Response) Get() *GetResultsGet200Response {
	return v.value
}

func (v *NullableGetResultsGet200Response) Set(val *GetResultsGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetResultsGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetResultsGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetResultsGet200Response(val *GetResultsGet200Response) *NullableGetResultsGet200Response {
	return &NullableGetResultsGet200Response{value: val, isSet: true}
}

func (v NullableGetResultsGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetResultsGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


